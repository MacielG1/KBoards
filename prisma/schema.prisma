generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Board {
  id              String  @id @default(cuid())
  userId          String
  name            String
  color           String
  backgroundColor String
  order           Int
  isCurrentBoard  Boolean @default(false)

  lists     List[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model List {
  id    String @id @default(cuid())
  title String
  order Int
  color String

  boardId String
  items   Item[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Board     Board?   @relation(fields: [boardId], references: [id], onDelete: Cascade)

  @@index([boardId])
}

model Item {
  id      String @id @default(cuid())
  content String @db.Text
  order   Int
  color   String

  listId String
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)

  boardId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listId])
}

model FreeTierLimit {
  id          String @id @default(cuid())
  userId      String @unique
  boardsCount Int    @default(0)
  listsCount  Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model PremiumSubscription {
  id     String @id @default(cuid())
  userId String @unique

  stripeCustomerId       String?   @unique
  stripeSubscriptionId   String?   @unique
  stripePriceId          String?   @unique
  stripeCurrentPeriodEnd DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
